/*
Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.

You must implement a solution with a linear runtime complexity and use only constant extra space.
*/

class Solution {
public:
    bool checkSetBit(int num,int i){
        if((num>>i)&1)
            return true;
        else
            return false;
    }

    int singleNumber(vector<int>& nums) {
        int n = nums.size();
        int ans = 0;
        for(int i=0;i<=31;i++){
            int sum = 0;
            for(int j=0;j<n;j++){
                int num = nums[j];
                if(checkSetBit(num,i)){
                    sum = sum + 1;
                }
            }
            sum = sum%3;
            ans |= sum<<i;
        }
        return ans;
    }
};

